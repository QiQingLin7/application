<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.application.mapper.TicketsMapper">
    <resultMap id="BaseResultMap" type="com.web.application.domain.Tickets">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="TicketId" jdbcType="INTEGER" property="ticketid"/>
        <result column="TicketName" jdbcType="VARCHAR" property="ticketname"/>
        <result column="StadiumId" jdbcType="INTEGER" property="stadiumid"/>
        <result column="BeginTime" jdbcType="DATE" property="begintime"/>
        <result column="TotalCount" jdbcType="INTEGER" property="totalcount"/>
        <result column="OrderCount" jdbcType="INTEGER" property="ordercount"/>
        <result column="Price" jdbcType="DOUBLE" property="price"/>
        <result column="Descn" jdbcType="VARCHAR" property="descn"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        TicketId, TicketName, StadiumId, BeginTime, TotalCount, OrderCount, Price, Descn
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from Tickets
        where TicketId = #{ticketid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from Tickets
        where TicketId = #{ticketid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="TicketId" keyProperty="ticketid" parameterType="com.web.application.domain.Tickets"
            useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into Tickets (TicketName, StadiumId, BeginTime,
        TotalCount, OrderCount, Price,
        Descn)
        values (#{ticketname,jdbcType=VARCHAR}, #{stadiumid,jdbcType=INTEGER}, #{begintime,jdbcType=DATE},
        #{totalcount,jdbcType=INTEGER}, #{ordercount,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE},
        #{descn,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="TicketId" keyProperty="ticketid"
            parameterType="com.web.application.domain.Tickets" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into Tickets
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ticketname != null">
                TicketName,
            </if>
            <if test="stadiumid != null">
                StadiumId,
            </if>
            <if test="begintime != null">
                BeginTime,
            </if>
            <if test="totalcount != null">
                TotalCount,
            </if>
            <if test="ordercount != null">
                OrderCount,
            </if>
            <if test="price != null">
                Price,
            </if>
            <if test="descn != null">
                Descn,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ticketname != null">
                #{ticketname,jdbcType=VARCHAR},
            </if>
            <if test="stadiumid != null">
                #{stadiumid,jdbcType=INTEGER},
            </if>
            <if test="begintime != null">
                #{begintime,jdbcType=DATE},
            </if>
            <if test="totalcount != null">
                #{totalcount,jdbcType=INTEGER},
            </if>
            <if test="ordercount != null">
                #{ordercount,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="descn != null">
                #{descn,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.web.application.domain.Tickets">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update Tickets
        <set>
            <if test="ticketname != null">
                TicketName = #{ticketname,jdbcType=VARCHAR},
            </if>
            <if test="stadiumid != null">
                StadiumId = #{stadiumid,jdbcType=INTEGER},
            </if>
            <if test="begintime != null">
                BeginTime = #{begintime,jdbcType=DATE},
            </if>
            <if test="totalcount != null">
                TotalCount = #{totalcount,jdbcType=INTEGER},
            </if>
            <if test="ordercount != null">
                OrderCount = #{ordercount,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                Price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="descn != null">
                Descn = #{descn,jdbcType=VARCHAR},
            </if>
        </set>
        where TicketId = #{ticketid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.web.application.domain.Tickets">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update Tickets
        set TicketName = #{ticketname,jdbcType=VARCHAR},
        StadiumId = #{stadiumid,jdbcType=INTEGER},
        BeginTime = #{begintime,jdbcType=DATE},
        TotalCount = #{totalcount,jdbcType=INTEGER},
        OrderCount = #{ordercount,jdbcType=INTEGER},
        Price = #{price,jdbcType=DOUBLE},
        Descn = #{descn,jdbcType=VARCHAR}
        where TicketId = #{ticketid,jdbcType=INTEGER}
    </update>
</mapper>